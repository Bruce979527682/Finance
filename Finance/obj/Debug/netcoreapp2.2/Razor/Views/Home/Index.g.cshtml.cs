#pragma checksum "C:\Users\Bruce\Desktop\Finance\Finance\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "021ad11bd0cbc7fbbb07ed52680c8755dd4add89"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Bruce\Desktop\Finance\Finance\Views\_ViewImports.cshtml"
using Finance;

#line default
#line hidden
#line 2 "C:\Users\Bruce\Desktop\Finance\Finance\Views\_ViewImports.cshtml"
using Finance.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"021ad11bd0cbc7fbbb07ed52680c8755dd4add89", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"78d485da229cf3b9644d6f0c651451eded00a1c1", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Bruce\Desktop\Finance\Finance\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 2287, true);
            WriteLiteral(@"<style>
    .el-row {
        margin-bottom: 20px;
    }
    /*.el-row:last-child {
        margin-bottom: 0;
    }*/
</style>
<div id=""div-vue"" style=""display:none;"" v-show=""isCreated"">
    <div>
        <el-row>
            <el-col :span=""4"">
                <el-timeline>
                    <el-timeline-item v-for=""(line, index) in timeline""
                                      :key=""index""
                                      :icon=""line.icon""
                                      :type=""line.type""
                                      :color=""line.color""
                                      :size=""line.size""
                                      :timestamp=""line.timestamp"">
                        {{line.content}}
                    </el-timeline-item>
                </el-timeline>
            </el-col>
            <el-col :span=""16"">
                <el-table :data=""list"" style=""width: 100%"" height=""250"">
                    <el-table-column fixed
                        ");
            WriteLiteral(@"             prop=""date""
                                     label=""日期""
                                     width=""150"">
                    </el-table-column>
                    <el-table-column prop=""name""
                                     label=""姓名""
                                     width=""120"">
                    </el-table-column>
                    <el-table-column prop=""province""
                                     label=""省份""
                                     width=""120"">
                    </el-table-column>
                    <el-table-column prop=""city""
                                     label=""市区""
                                     width=""120"">
                    </el-table-column>
                    <el-table-column prop=""address""
                                     label=""地址""
                                     width=""300"">
                    </el-table-column>
                    <el-table-column prop=""zip""
                                     label");
            WriteLiteral("=\"邮编\"\r\n                                     width=\"120\">\r\n                    </el-table-column>\r\n                </el-table>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n                <el-row>\r\n                    <el-button ");
            EndContext();
            BeginContext(2333, 2646, true);
            WriteLiteral(@"@click=""dialogVisible = true"">新增类别</el-button>
                </el-row>
                <el-row>
                    <el-col :span=""4"">类别</el-col>
                    <el-col :span=""20"">
                        <el-select v-model=""record.category"" placeholder=""请选择"">
                            <el-option v-for=""category in categoryList""
                                       :key=""category.id""
                                       :label=""category.name""
                                       :value=""category.id"">
                            </el-option>
                        </el-select>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span=""4"">名称</el-col>
                    <el-col :span=""20"">
                        <el-input v-model=""record.name"" placeholder=""请输入内容""></el-input>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span=""4"">金额</el-col>
             ");
            WriteLiteral(@"       <el-col :span=""20"">
                        <el-input v-model=""record.money"" placeholder=""请输入内容""></el-input>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span=""4"">数量</el-col>
                    <el-col :span=""20"">
                        <el-input v-model=""record.number"" placeholder=""请输入内容""></el-input>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span=""4"">日期</el-col>
                    <el-col :span=""20"">
                        <el-input v-model=""record.addTime"" placeholder=""请输入内容""></el-input>
                    </el-col>
                </el-row>
                <el-row>
                    <el-col :span=""4"">备注</el-col>
                    <el-col :span=""20"">
                        <el-input v-model=""record.remark"" placeholder=""请输入内容""></el-input>
                    </el-col>
                </el-row>
                <el-row>
                    ");
            WriteLiteral(@"<el-col :span=""4"">类型</el-col>
                    <el-col :span=""20"">
                        <el-select v-model=""record.type"" placeholder=""请选择"">
                            <el-option v-for=""nature in natureList""
                                       :key=""nature.value""
                                       :label=""nature.label""
                                       :value=""nature.value"">
                            </el-option>
                        </el-select>
                    </el-col>
                </el-row>
                <el-row>
                    <el-button ");
            EndContext();
            BeginContext(4980, 368, true);
            WriteLiteral(@"@click=""addRecord()"">保存</el-button>
                </el-row>
            </el-col>
        </el-row>
    </div>
    <el-dialog title=""提示""
               :visible.sync=""dialogVisible""
               width=""30%""
               :before-close=""handleClose"">
        <span>这是一段信息</span>
        <span slot=""footer"" class=""dialog-footer"">
            <el-button ");
            EndContext();
            BeginContext(5349, 86, true);
            WriteLiteral("@click=\"dialogVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" ");
            EndContext();
            BeginContext(5436, 4665, true);
            WriteLiteral(@"@click=""dialogVisible = false"">确 定</el-button>
        </span>
    </el-dialog>
</div>
<script>
    var vm = new Vue({
        el: '#div-vue',
        data: {
            isCreated: false,
            timeline: [
                {
                    content: '记录',
                    timestamp: '2019-01-01 08:08'
                }
            ],
            list: [
                //{
                //    date: '2016-05-03',
                //    name: '王小虎',
                //    province: '上海',
                //    city: '普陀区',
                //    address: '上海市普陀区金沙江路 1518 弄',
                //    zip: 200333
                //}
            ],
            dataType: {
                name: '',
                remark: ''
            },
            record: {
                category: '',
                type: '',
                name: '',
                money: '',
                number: '',
                addTime: '',
                remark: '',
            },
   ");
            WriteLiteral(@"         categoryList: [],
            recordList: [],
            natureList: [
                {
                    value: 1,
                    label: '资产'
                },
                {
                    value: 2,
                    label: '负债'
                }
            ],
            queryPara: {
                pageIndex: 1,
                pageSize: 20,
            },
            queryPara2: {
                pageIndex: 1,
                pageSize: 20,
            },
            dialogVisible: false
        },
        methods: {
            loadData() {
                $.ajax({
                    type: 'POST',
                    url: '/ajax/gettypelist',
                    dataType: 'json',
                    data: this.queryPara,
                    success: function (data) {
                        if (data.code == 1) {
                            vm.categoryList = data.list;
                        }
                    },
                    erro");
            WriteLiteral(@"r: function (data) {

                    }
                });
            },
            loadData2() {
                $.ajax({
                    type: 'POST',
                    url: '/ajax/getrecordlist',
                    dataType: 'json',
                    data: this.queryPara2,
                    success: function (data) {
                        if (data.code == 1) {
                            vm.recordList = data.list;
                        }
                    },
                    error: function (data) {

                    }
                });
            },
            addType: function () {
                $.ajax({
                    type: 'POST',
                    url: '/ajax/addrecordtype',
                    data: this.dataType,
                    dataType: 'json',
                    success: function (data) {
                        if (data.code == 1) {
                            vm.loadData2();
                            vm.$message(dat");
            WriteLiteral(@"a.msg);
                        } else {

                            vm.$message(data.msg);
                        }
                    },
                    error: function (data) {

                    }
                });
            },
            addRecord: function () {
                $.ajax({
                    type: 'POST',
                    url: '/ajax/addrecord',
                    data: this.record,
                    dataType: 'json',
                    success: function (data) {
                        if (data.code == 1) {
                            vm.loadData();
                            vm.$message(data.msg);
                        } else {

                            vm.$message(data.msg);
                        }
                    },
                    error: function (data) {

                    }
                });
            },
            convertTime: function (time) {
                if (time != undefined && time !== '') {
      ");
            WriteLiteral(@"              return time.substr(0, 10);
                }
            },
            handleClose(done) {
                this.$confirm('确认关闭？').then(_ => {
                        done();
                }).catch(_ => {

                });
            }
        },
        computed: {

        },
        created: function () {
            this.isCreated = true;
            this.loadData();
            this.loadData2();
        },
        beforeMount: function () {

        },
        mounted: function () {

        }
    });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
